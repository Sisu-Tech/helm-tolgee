# Default values for tolgee.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
    repository: tolgee/tolgee
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v3.41.0

serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ''

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

podAnnotations: {}

podSecurityContext:
    {}
    # fsGroup: 2000

securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

service:
    type: ClusterIP
    port: 8080
    annotations: {}

ingress:
    enabled: false
    className: ''
    annotations:
        {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
    hosts:
        - host: chart-example.local
          paths:
              - path: /
                pathType: Prefix
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
    standalone:
        enabled: true
    architecture: 'standalone' # could be used 'external' for an external database
    host: ''
    auth:
        postgresPassword: ''
        database: tolgee
        username: tolgee
        password: tolgee_password # MUST be replaced with some secret password! Don't use this in production
        secret:
            name: secretName
            passwordKey: password
            usernameKey: username
            databaseKey: dbname
            hostKey: dbhostname
    primary:
        persistence:
            size: 1Gi

tolgee:
    env: {}
    managedCertificate:
        enabled: false
        domains: []
    persistence:
        enabled: false
        storageClass: ''
        size: 1Gi
    smtp:
        secret:
            name: secretName
            hostKey: smtpHost
            portKey: smtpPort
            usernameKey: smtpUser
            passwordKey: smtpPassword
    authentication:
        secret:
            name: secretName
            jwtSecretKey: jwtSecret
        google:
            enabled: false
            clientId: ''
            clientSecretName: ''
            clientSecretKey: ''
            workspaceDomain: ''
            authorizationUrl: 'https://oauth2.googleapis.com/token'
            userUrl: 'https://www.googleapis.com/oauth2/v3/userinfo'
        github:
            enabled: false
            clientId: ''
            clientSecretName: ''
            clientSecretKey: ''
            authorizationUrl: 'https://github.com/login/oauth/access_token'
            userUrl: 'https://api.github.com/user'
        oauth2:
            enabled: false
            clientId: ''
            clientSecretName: ''
            clientSecretKey: ''
            scopes: 'openid email profile'
            authorizationUrl: ''
            tokenUrl: ''
            userUrl: ''
